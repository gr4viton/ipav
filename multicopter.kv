#:kivy 1.9
#from kivy.core.text import Label as CoreLabel

<Multicopter>:
    cols: 2
    gl_left: gl_left
#    gl_middle: gl_middle
#    gl_right: gl_right
    img_webcam: img_webcam
#    img_tags: img_tags
#    txt_numFound: txt_numFound
#    sla_tags: sla_tags
    layout_steps: layout_steps
#    img_steps: img_steps # temporal
#    label_mean_exec_time: label_mean_exec_time
#    grid_img_tags: grid_img_tags
    # lb_webcam_resolution: lb_webcam_resolution

    #label_chain_string_text: label_chain_string_text

#    ScrollView:
#        Label:
#            text: str('looooooong text '*1000)
#            font_size: 12
#            text_size: self.width, None
#            size_hint_y: None
#            height: self.texture_size[1]
#    GridLayout:
#        cols: 2
#        size_hint_y: 0.9
#
#        TextInput:
#            text: 'ah'
#            size_hint_y: 0.1
#        TextInput:
#            text: 'ah'
#            size_hint_y: 0.1

    GridLayout:
#        size_hint_x: 1
        cols:1
        id: gl_left
#        padding: 10
#        canvas.before:
#            Color:
#                rgba: 0, 1, 0, 1
#            Rectangle:
#                # self here refers to the widget i.e FloatLayout
#                pos: self.pos
#                size: self.size

        Button:
#            text: 'Switch cameras'
            text: 'Toggle computing'
            size_hint_y: .1
            on_press: root.chain_control.toggle_computing()
            # pos_hint: {'center_x':.5, 'center_y': .5}
        Button:
            text: 'Toggle capturing'
            size_hint_y: .1
            on_press: root.capture_control.toggle_capturing();
        Button:
            text: 'Switch cameras'
            size_hint_y: .1
            on_press: root.capture_control.switch_camera();
            # pos_hint: {'center_x':.5, 'center_y': .5}
        Button:
            text: 'Load chain'
            size_hint_y: .1
            on_press: root.chain_control.show_load_chain();
            # pos_hint: {'center_x':.5, 'center_y': .5}

        GridLayout:
            cols:1
            size_hint_y: 0.5
            padding: (2,2,2,2)
            spacing: (2,2)
            margin: 5
            color: .08, .16 , .24
            canvas.before:
                Color:
                    rgb: self.color
                Rectangle:
                    pos: self.x + self.margin, self.y + self.margin + 1
                    size: self.width - 2 * self.margin , self.height - 2 * self.margin

            Label:
                size_hint_y: 0.3
                text: 'All steps operations'
            GridLayout:
                cols:2
                hint_y: 1
                Button:
                    text: "Hide"
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.show('none')
                Button:
                    text: "Show"
#                    size_hint_y: 0.1
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.show('all')

                Button:
                    text: "Freeze"
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.draw('none')
                Button:
                    text: "Redraw"
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.draw('all')

                Button:
                    text: "Blank"
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.info('none')
                Button:
                    text: "Info"
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.info('all')

                Button:
                    text: "Narrow"
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.narrow('all')
                Button:
                    text: "Wide"
                    size_hint_y: self.parent.hint_y
                    on_press: root.step_widgets_control.narrow('none')

        Image:
            id: img_webcam
            size_hint_y: 1

        GridLayout:
            cols: 1
            size_hint_y: 0.3
            padding: (2,2,2,2)
            spacing: (2,2)
            margin: 5
            color: .08, .16 , .24
            canvas.before:
                Color:
                    rgb: self.color
                Rectangle:
                    pos: self.x + self.margin, self.y + self.margin + 1
                    size: self.width - 2 * self.margin , self.height - 2 * self.margin
    #            size_hint_x: 1
            Label:
                text: "Camera resolution"
            Label:
                #id: lb_webcam_resolution
#                size_hint_y: .1
                text: root.lb_webcam_resolution

        GridLayout:
            cols: 1
            size_hint_y: 0.3
            padding: (2,2,2,2)
            spacing: (2,2)
            margin: 5
            color: .08, .16 , .24
            canvas.before:
                Color:
                    rgb: self.color
                Rectangle:
                    pos: self.x + self.margin, self.y + self.margin + 1
                    size: self.width - 2 * self.margin , self.height - 2 * self.margin

            Label:
                text: 'Resolution multiplier'
            Label:
                text: str(slider_resolution_div.value)
            Slider:
                id: slider_resolution_div
                sla_steps: 42
                value: 0.5
                min: 0.05
                max: 2
                on_value: root.chain_control.set_resolution_div(self.value);


        GridLayout: # Info tab
            cols: 2
            size_hint_y: None
            padding: (2,2,2,2)
            spacing: (2,2)
            margin: 5
            color: .08, .16 , .24
            canvas.before:
                Color:
                    rgb: self.color
                Rectangle:
                    pos: self.x + self.margin, self.y + self.margin + 1
                    size: self.width - 2 * self.margin , self.height - 2 * self.margin

#            row_force_default: 'true'
#            row_default_height: 15

#            Label:
#                size_hint_x: 2
#                text: "Found tags"
#                halign: "right"
#                valign: "middle"
#                text_size: self.size
##                pos_hint_x: 10
#            Label:
##                size_hint_x: None
#                id: txt_numFound

            Label:
                text: "Chain last [ms]"
                halign: 'right'
                valign: "middle"
                text_size: self.size
            Label:
                text: root.label_mean_exec_time_last
            Label:
                text: "Chain mean [ms]"
                halign: 'right'
                valign: "middle"
                text_size: self.size
            Label:
                text: root.label_mean_exec_time
#                size_hint_y: 0.2
    #            text: root.chain_control.mean_exec_time
#        Label:
#            text:
#                'splitter.width: {}\nparent.width: {}\nmax_size: {}'\
#                .format(spl.width, root.width, spl.max_size)

#            GridLayout: # img tags
#                id: grid_img_tags
#                cols: 1
#                size_hint_x: 0
#                margin: 1
#                color: 0.08, 0.16 , 0.24
#                canvas.before:
#                    Color:
#                        rgb: self.color
#                    Rectangle:
#                        pos: self.x + self.margin, self.y + self.margin + 1
#                        size: self.width - 2 * self.margin , self.height - 2 * self.margin
#                Label:
#                    halign: 'left'
##                    font_size: 10
#                    font_size: 0
#                    do_rotation: 90
#                    text: root.tag_error_count_text
#                Image:
#                    id: img_tags
#                    color: 0,0,0


    Splitter:
        id: spl

        max_size: self.parent.width - 50
        size: 1170, 400
        size_hint: None,1


        GridLayout: # right tab
            cols: 1
            padding: 5
            GridLayout: # top chain string layout
                size_hint_y: 0.04
                cols: 3
                Label:
                    text: 'Chain:'
                    size_hint_x: 0.05

                TextInput:
                    readonly: 'True'
#                    multiline: 'False'
                    on_double_tap: root.show_load_chain()
                    on_focus: root.show_load_chain()
#                    on_quad_touch: root.update_chain_string_from_popup()
#                    on_double_tap: root.update_chain_string_from_popup()

                    text: root.label_chain_string_text

#                TextInput:
##                    readonly: 'True'
#
#                    on_double_tap: root.show_load_chain()
##                    on_text_validate: root.show_load_chain()
#                    on_value: root.show_load_chain()
#
#                    padding: 2,0,2,0
##                    halign: 'middle'
#                    text: root.label_chain_string_text
##                    text_size: self.size

                Button:
                    size_hint_x: 0.05
                    text: 'conf'
                    on_press: root.show_load_chain()

            GridLayout: # step window layout
                cols:1
                id: grid_steps
                ScrollView: # step scrolling
                    id: scroll_steps

                    min_move: 5
                #    scroll_distance: self.width * 0.05 # good moving - cannot zoom
                    scroll_distance: min(self.width, self.height) * 0.8
#                    scroll_timeout: 50
                    do_scroll_x: 0

                    StackLayout:
                        height: self.minimum_height - 0
                        size_hint_y: None
                        id: layout_steps
                        orientation: 'lr-tb'
#                        orientation: 'tb-rl'
#                        orientation: 'rl-bt'
#                        orientation: 'tb-lr'
    #                        size_hint_x: 1


#        Splitter:
#            vertical: 0
#            GridLayout:
#                size_hint_x: 0.5
#                cols:1
#                id: gl_right
#                padding: 10
#                Button:
#                    text: 'Save the matrix??'
        #
        #        Button:
        #            text: 'Exit'
        #            on_press: Exit()


#[ColoredGrid@GridLayout]:
#    cols: 1
#    size_hint_y: None
##    height: self.minimum_height * 4
##            height: 300
##    size_hint_y: layout_steps_height / 400
##            size_hint_x: 1/3
#    cols: 1
#    padding: (2,2,2,2)
#    spacing: (2,2)
#    margin: 5
#    color: .08, .16 , .24
#    canvas.before:
#        Color:
#            rgb: self.color
#        Rectangle:
#            pos: self.x + self.margin, self.y + self.margin + 1
#            size: self.width - 2 * self.margin , self.height - 2 * self.margin
#
#    GridLayout:
#        ctx.GridLayout
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<ResolutionControls>
#    slider_value: slider_value
    slider: slider
    cols:1
    Label:
        text: 'Resolution multiplier'
    Label:
        text: str(round(slider.value,2))
    Slider:
        id: slider
        sla_steps: 42
        value: 0.5
        min: 0.05
        max: 2
#        on_value: root.chain_control.set_resolution_div(self.value);
        value: root.slider_value
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#<ChainStringTextInput>:


#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#GridLayoutFramed:
<ButtonLeft>:
    halign: 'left'
#    size: self.text_size
    text_size: self.size
    padding: (5,5)
    size_hint: (None,None)
    height: 25
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<LabelLeft@Label>:
    halign: 'left'
    text_size: self.size

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<UnicodeButton>
    font_name: root.unifont
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<HistoryTextInput@TextInput>:
    halign: 'left'
    readonly: 'True'
    multiline: 'False'
    height: self.minimum_height - 0
    size_hint_y: None
    background_color: [0.5,0.5,0.5, 1]
#    height: font_size
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<ChainHistory>:
    history_item: history_item
    cols:3
#    height: self.HistoryTextInput.minimum_height - 0
    size_hint_y: None
    height: history_item.height

    HistoryTextInput
        id: history_item
        text: root.text

    UnicodeButton
#        size_hint: None,None
        size_hint_x: 0.025
        text: '\u25B2' # black triangle pointing up
        on_press: root.use_chain(root.text, use=False)

    UnicodeButton
#        size_hint: None,None
        size_hint_x: 0.025
#        width: self.height
#        text: unichr(2764)

#        text: '>'
#        text: '\u22BC' # >>>
        text: '\u2713\u25B6' # check
        on_press: root.use_chain(root.text, use=True)

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<ChangeChainWidget>:
    layout_available_steps: layout_available_steps
    chain_string_input: chain_string_input
    chain_history_layout: chain_history_layout

    title: 'Change chain steps'
#    auto_dismiss: 'False'
#    size_hint: (1, 1)
    GridLayout:
        cols: 1
        GridLayout:
            cols:1
            size_hint_y: 5
#                GridLayout:
#                    cols: 1
#                    Label:
#                        text: 'Where to add new step in string:'
##                    BoxLayout:
#                    CheckBoxLabel:
#                        group: 'add_step'
#                        text: 'to the end'
#                        active: 'False'
##                        active: 'True'
##                        on_select
#                    CheckBoxLabel:
#                        group: 'add_step'
#                        text: 'after the cursor'
##                        active: 'False'
#                    CheckBoxLabel:
#                        group: 'add_step'
#                        text: 'at the beginning'
##                        active: 'False'

            GridLayout: # available steps buttons
                cols: 1
                Label:
                    text: 'Available step names:'
                    size_hint_y: 0.1

#                GridLayout:
#                    cols: 3
#                    id: layout_available_steps
                StackLayout:
#                    orientation: 'lr-tb'
                    orientation: 'tb-lr'
                    id: layout_available_steps

        LabelLeft
            size_hint_y: 1
            text: 'Insert chain step names separated by commas'

        GridLayout:
            cols:2
            TextInput:
                size_hint_y: 5
                id: chain_string_input
    #            text: 'original, gray'
                text: root.chain_string
    #            on_enter: root.when_on_enter()
                on_text_validate: root.update_chain_string()
                on_text: root.on_text_change(self, self.text)
#                padding: 2,0,2,0
                multiline: 'False'

            GridLayout:
#            StackLayout:
                cols: 1
                size_hint_x: 0.025
#                orientation: 'tb-lr'
                UnicodeButton:
                    text: '\u00D7'
                    on_press: root.dismiss()
#                Button:
#                    text: 'Show available step names'
#                    on_press: root.show_step_names()
                UnicodeButton:
                    text: '\u2713'
                    on_press: root.update_chain_string()
                UnicodeButton:
                    text: '\u2713\u25B6'
                    on_press: root.update_chain_string()

#            on_text: print(self.text)
#            on_text: print(root.chain_string_text)

#            valign: 'middle'
#            text_size: self.si`ze

        GridLayout
            cols:1
            size_hint_y: 5
            GridLayout:
                cols:2
                size_hint_y: 0.2
                LabelLeft
                    text: 'Chain history'
                Button
                    size_hint_x: 0.1
                    text: 'Save history'
                    on_press: root.save_chain_history()
            ScrollView
#                StackLayout:
#
#                    orientation: 'lr-tb'
                StackLayout

#                    size_hint_y: None
                    orientation: 'lr-tb'
                    orientation: 'tb-lr'
#                    orientation: 'lr-bt'
#                    orientation: 'vertical'
                    id: chain_history_layout



#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<CheckBoxLabel@BoxLayout>:
    text: ''
    active: 'False'
    group: ''
    on_active: checkbox.on_active
    checkbox: checkbox
#    BoxLayout:
    CheckBox:
        id: checkbox
        size_hint_x: 0.2
        active: root.active
        group: root.group
        halign: 'right'
        text_size: self.size
#        on_active: root.on_active

    Button:
        text: root.text
        halign: 'left'
        text_size: self.size
#        on_touch_up: root.checkbox.on_press()
        on_press: root.checkbox.on_state(checkbox, root.checkbox.active != True) # does not work
        background_color: 1, 1, 1, 0



#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<StepWidget>:

    tbt_show_info: tbt_show_info
    tbt_informing: tbt_informing
    tbt_draw: tbt_draw
    tbt_show_img: tbt_show_img
    tbt_narrow: tbt_narrow

    kivy_image: kivy_image

#    info_label_bottom: info_label_bottom
    info_label_layout: info_label_layout
#    control_layout: control_layout
    bottom_layout: bottom_layout

#    info_label_right: info_label_right
    time_label: time_label


#    layout_steps_height: 1500
#    size_hint_y: 0.4
#    size_hint_y: None
#    size_hint_x: 1/3
#    size_hint_x: None
#    width: 282
#    height: self.minimum_height * 4
#    height: 250
#    size_hint_y: layout_steps_height / 400

#    cols: 1
    orientation: 'tb-rl'
#    orientation: 'vertical'

    padding: (4,4,4,4)
    spacing: (4,4)
    margin: 1
    color: .08,.16 , .24
    canvas.before:
        Color:
            rgb: self.color
        Rectangle:
            pos: self.x + self.margin, self.y + self.margin + 1
            size: self.width - 2 * self.margin , self.height - 2 * self.margin
#            self.thickness


    id: bottom_layout

    GridLayout:
        cols: 2
#        size_hint_y: 0.15
#        size_hint_y: None
#        height: 0.15 * 250

        ToggleButton:
            id: tbt_narrow
            text: root.name
            size_hint_x: 0.9
            state: 'down'
            on_state: root.set_narrowed(narrowed=(self.state != 'down'), from_gui=True)

        GridLayout:
            cols: 2
            size_hint_x: 0.4
            Label:
                id: time_label
                valign: 'top'
                size_hint_x: 0.4
#                font_size: 10
            GridLayout:
                cols: 2
                size_hint_x: 0.7
                ToggleButton:
                    id: tbt_show_info
                    text: 'info'
#                    state: 'down'
                    on_state: root.show_info(self.state == 'down')

                ToggleButton:
                    id: tbt_informing
                    text: 'sync'
                    state: 'down'
                    on_state: root.sync_info(self.state == 'down')

                ToggleButton:
                    id: tbt_show_img
                    text: 'img'
                    state: 'down'
                    on_state: root.show_img(self.state == 'down')

                ToggleButton:
                    id: tbt_draw
                    text: 'draw'
                    state: 'down'
                    on_state: root.set_drawing(self.state == 'down')

#    GridLayout
#        cols:1
#        size_hint_y: 0.85
#    GridLayout:
#        cols: 1
##        size_hint_y: 0.8
##            GridLayout:
#                cols:1
    Image:
        id: kivy_image
#        size_hint_y: None
#        height: 0.8*250
#                size_hint_y: 1.1
#                size_hint_x: 1
#                background_normal: 'True'
#
#            TextInput:
#                id: info_label_right
#                text: 'ahoj'
#                valign: 'top'
#                size_hint_y: 0
##                readonly: 'True'
##                do_scroll: 'True'


    GridLayout:
        cols: 1
        id: info_label_layout
#        size_hint_y: None

#        GridLayout:
#            cols: 1
#            id: control_layout
##            size_hint_y: 0.2

#
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#<InfoLabelWidget@TextInput>:
<InfoLabelWidget>:

#    id: parent
    font_size: 12
#    GridLayout:
#        cols:1
#        Label:
    text: self.text
#    text: 'asd'
    valign: 'top'
#            font_size: 6
#            font_size: 12
#    readonly: 'True'
    scroll_y: 0.0
#    do_scroll: 'True'
#    size_hint_y: 0.2
#    wid

